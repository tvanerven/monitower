version: '3.8'

x-environment: &glitchtip-default-env
  DATABASE_URL: ${GLITCHTIP_DATABASE_URL}
  SECRET_KEY: ${GLITCHTIP_SECRET_KEY}
  PORT: 8000
  EMAIL_URL: ${GLITCHTIP_EMAIL_URL}
  GLITCHTIP_DOMAIN: ${GLITCHTIP_DOMAIN}
  DEFAULT_FROM_EMAIL: ${GLITCHTIP_FROM_EMAIL}
  CELERY_WORKER_AUTOSCALE: "1,3"

x-depends_on: &glitchtip-default-depends
  - monitower-glitchtip-db
  - monitower-redis

services:
  grafana:
    container_name: monitower-grafana
    image: grafana/grafana:latest
    ports:
      - "${GRAFANA_PORT}:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    env_file:
      - .env
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
    restart: unless-stopped

  prometheus:
    container_name: monitower-prometheus
    image: prom/prometheus:latest
    ports:
      - "${PROMETHEUS_PORT}:9090"
    volumes:
      - ./prometheus:/etc/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    env_file:
      - .env
    restart: unless-stopped

  alertmanager:
    container_name: monitower-alertmanager
    image: prom/alertmanager:latest
    ports:
      - "${ALERTMANAGER_PORT}:9093"
    volumes:
      - ./alertmanager/config.yml:/etc/alertmanager/config.yml
    env_file:
      - .env
    restart: unless-stopped

  # PostgreSQL
  monitower-glitchtip-db:
    container_name: monitower-glitchtip-db
    image: postgres:15
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${GLITCHTIP_DB_NAME}
      POSTGRES_USER: ${GLITCHTIP_DB_USER}
      POSTGRES_PASSWORD: ${GLITCHTIP_DB_PASSWORD}
    volumes:
      - glitchtip_db_data:/var/lib/postgresql/data
    restart: unless-stopped

    # Redis or Valkey
  monitower-redis:
    container_name: monitower-redis
    image: redis:7-alpine  # or valkey/valkey
    ports:
      - "6379:6379"
    restart: unless-stopped

    # Glitchtip Web UI
  monitower-glitchtip-web:
    container_name: monitower-glitchtip-web
    image: glitchtip/glitchtip
    depends_on: *glitchtip-default-depends
    ports:
      - "${GLITCHTIP_PORT}:8000"
    env_file:
      - .env
    environment: *glitchtip-default-env
    volumes:
      - glitchtip_uploads:/code/uploads
    restart: unless-stopped

    # Background worker
  monitower-glitchtip-worker:
    container_name: monitower-glitchtip-worker
    image: glitchtip/glitchtip
    depends_on: *glitchtip-default-depends
    command: ./bin/run-celery-with-beat.sh
    env_file:
      - .env
    environment: *glitchtip-default-env
    volumes:
      - glitchtip_uploads:/code/uploads
    restart: unless-stopped

    # One-shot migration job (only needs to run once)
  monitower-glitchtip-migrate:
    container_name: monitower-glitchtip-migrate
    image: glitchtip/glitchtip
    depends_on: *glitchtip-default-depends
    command: ./bin/run-migrate.sh
    env_file:
      - .env
    environment: *glitchtip-default-env

  registry:
    container_name: monitower-registry
    image: registry:2
    ports:
      - "${REGISTRY_PORT}:5000"
    env_file:
      - .env
    volumes:
      - registry_data:/var/lib/registry
    restart: unless-stopped

  keycloak:
    container_name: monitower-keycloak
    image: quay.io/keycloak/keycloak:24.0
    command: start-dev
    ports:
      - "${KEYCLOAK_PORT}:8080"
    env_file:
      - .env
    environment:
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
    volumes:
      - keycloak_data:/opt/keycloak/data
    restart: unless-stopped

volumes:
  grafana_data:
  glitchtip_db_data:
  minio_data:
  registry_data:
  keycloak_data:
  glitchtip_uploads: